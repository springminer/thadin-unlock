{"version":3,"sources":["component/noti.js","component/myform.js","App.js","reportWebVitals.js","index.js"],"names":["Noti","useState","show","setShow","className","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","onClick","MyForm","useEffect","document","title","deviceId","setDeviceId","showNoti","setShowNoti","handleSubmit","event","preventDefault","length","axios","post","device_id","then","response","catch","error","console","log","onSubmit","htmlFor","type","name","id","value","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mPAMe,SAASA,IACpB,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,mCAEI,qBACI,YAAU,YACVC,UAAU,mFAFd,SAII,qBAAKA,UAAU,2DAAf,SAEI,cAAC,IAAD,CACIF,KAAMA,EACNG,GAAIC,WACJC,MAAM,6CACNC,UAAU,4DACVC,QAAQ,6CACRC,MAAM,kCACNC,UAAU,cACVC,QAAQ,YARZ,SAUI,qBAAKR,UAAU,qHAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,IAAD,CAAiBA,UAAU,yBAAyB,cAAY,WAEpE,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,oCAAb,iCACA,mBAAGA,UAAU,6BAAb,2DAEJ,qBAAKA,UAAU,0BAAf,SACI,yBACIA,UAAU,8IACVS,QAAS,WACLV,GAAQ,IAHhB,UAMI,sBAAMC,UAAU,UAAhB,mBACA,cAAC,IAAD,CAAOA,UAAU,UAAU,cAAY,6BC1CnF,IAiDeU,EAjDA,WACXC,qBAAU,WACNC,SAASC,MAAQ,oBAGrB,MAAgChB,mBAAS,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAAgClB,oBAAS,GAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KAOMC,EAAe,SAACC,GAClBA,EAAMC,iBACFN,EAASO,OAAS,IAClBC,IAAMC,KAAK,0CAA2C,CAClDC,UAAWV,IACZW,MAAK,SAAUC,GACdT,GAAY,MACbU,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OAKxB,OACI,qCACMZ,GAAY,cAACpB,EAAD,IACd,uBAAMI,UAAU,4BAA4B+B,SAAUb,EAAtD,UACI,sBAAKlB,UAAU,2KAAf,UACI,uBAAOgC,QAAQ,YACRhC,UAAU,gGADjB,uBAEA,uBAAOiC,KAAK,OAAOC,KAAK,YAAYC,GAAG,YAAYC,MAAOtB,EAAUuB,SAzB/D,SAAClB,GAClBJ,EAAYI,EAAMmB,OAAOF,OACzBP,QAAQC,IAAIX,EAAMmB,OAAOF,QAwBNpC,UAAU,kGACVuC,YAAY,2CAEvB,qBAAKvC,UAAU,OAAf,SACI,wBAAQiC,KAAK,SACLF,SAAUb,EACVlB,UAAU,8OAFlB,6BC3BLwC,MAbf,WACE,OACI,qBAAKxC,UAAU,cAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,uEAAf,SACI,cAAC,EAAD,WCKHyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASwC,eAAe,SAM1BX,M","file":"static/js/main.873cc7a1.chunk.js","sourcesContent":["/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { CheckCircleIcon } from '@heroicons/react/outline'\nimport { XIcon } from '@heroicons/react/solid'\n\nexport default function Noti() {\n    const [show, setShow] = useState(true)\n\n    return (\n        <>\n            {/* Global notification live region, render this permanently at the end of the document */}\n            <div\n                aria-live=\"assertive\"\n                className=\"fixed inset-0 flex items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-start\"\n            >\n                <div className=\"w-full flex flex-col items-center space-y-4 sm:items-end\">\n                    {/* Notification panel, dynamically insert this into the live region when it needs to be displayed */}\n                    <Transition\n                        show={show}\n                        as={Fragment}\n                        enter=\"transform ease-out duration-300 transition\"\n                        enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n                        enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\n                        leave=\"transition ease-in duration-100\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <div className=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                            <div className=\"p-4\">\n                                <div className=\"flex items-start\">\n                                    <div className=\"flex-shrink-0\">\n                                        <CheckCircleIcon className=\"h-6 w-6 text-green-400\" aria-hidden=\"true\" />\n                                    </div>\n                                    <div className=\"ml-3 w-0 flex-1 pt-0.5\">\n                                        <p className=\"text-sm font-medium text-gray-900\">Successfully saved!</p>\n                                        <p className=\"mt-1 text-sm text-gray-500\">Anyone with a link can now view this file.</p>\n                                    </div>\n                                    <div className=\"ml-4 flex-shrink-0 flex\">\n                                        <button\n                                            className=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                            onClick={() => {\n                                                setShow(false)\n                                            }}\n                                        >\n                                            <span className=\"sr-only\">Close</span>\n                                            <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Transition>\n                </div>\n            </div>\n        </>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Noti from \"./noti\";\n\nconst MyForm = () => {\n    useEffect(() => {\n        document.title = 'Unlock your id'\n    })\n\n    const [deviceId, setDeviceId] = useState('');\n    const [showNoti, setShowNoti] = useState(false);\n\n    const handleChange = (event) => {\n        setDeviceId(event.target.value)\n        console.log(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (deviceId.length > 10) {\n            axios.post('https://api.thadinn.com/api/test-unlock', {\n                device_id: deviceId,\n            }).then(function (response) {\n                setShowNoti(true);\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n    }\n\n    return (\n        <>\n            { showNoti && <Noti/> }\n            <form className=\"xs:w-[300px] md:w-[500px]\" onSubmit={handleSubmit}>\n                <div className=\"relative border border-gray-300 text-gray-200 bg-gray-800 rounded-md px-3 py-2 shadow-sm focus-within:ring-1 focus-within:ring-indigo-600 focus-within:border-indigo-600\">\n                    <label htmlFor=\"device_id\"\n                           className=\"absolute -top-2 left-2 -mt-px inline-block px-1 text-xs font-medium text-gray-300 bg-gray-800\">Id Number</label>\n                    <input type=\"text\" name=\"device_id\" id=\"device_id\" value={deviceId} onChange={handleChange}\n                           className=\"block w-full border-0 p-0 placeholder-gray-700 text-red-500 bg-gray-800 focus:ring-0 sm:text-sm\"\n                           placeholder=\"1234567-1234-1234-1234-123456789012\"/>\n                </div>\n                <div className=\"mt-3\">\n                    <button type=\"submit\"\n                            onSubmit={handleSubmit}\n                            className=\"inline-flex items-center px-2.5 py-1.5 bg-purple-800 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-700\">\n                        Unlock\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default MyForm;","import MyForm from './component/myform'\n\nfunction App() {\n  return (\n      <div className=\"bg-gray-800\">\n          <div className=\"container mx-auto\">\n              <div className=\"min-h-screen flex justify-center flex-wrap content-center min-w-min \">\n                  <MyForm/>\n              </div>\n          </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}